<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--客户映射 指定到dao接口 -->
<mapper namespace="com.deepexi.content.mapper.HotwordGoodslablesRelationMapper">
    <resultMap type="com.deepexi.content.domain.dto.HotwordGoodslablesRelationDto" id="HotwordGoodslablesRelationDtoResult">
        <result property="id" column="id" />
        <result property="hotWordId" column="hot_word_id" />
        <result property="goodsLabelsId" column="goods_labels_id" />
        <result property="tenantCode" column="tenant_code" />
        <result property="createdAt" column="created_at" />
        <result property="createdBy" column="created_by" />
        <result property="updatedAt" column="updated_at" />
        <result property="updatedBy" column="updated_by" />
        <result property="version" column="version" />
        <result property="dr" column="dr" />
    </resultMap>
    <sql id="Base_Column_List">
      id,      hot_word_id,      goods_labels_id,      tenant_code,      created_at,      created_by,      updated_at,      updated_by,      version,      dr    </sql>
    <select id="findList" resultType="com.deepexi.content.domain.eo.HotwordGoodslablesRelation">
        SELECT <include refid="Base_Column_List"/> FROM hotword_goodslables_relation WHERE dr=0
    </select>
    <insert id="batchInsert">
        INSERT INTO hotword_goodslables_relation
        (        id,        hot_word_id,        goods_labels_id,        tenant_code,        created_at,        created_by,        updated_at,        updated_by,        version,        dr)
        VALUES
        <foreach collection="eoi" index="index" item="value" separator=",">
            (            #{value.id},            #{value.hotWordId},            #{value.goodsLabelsId},            #{value.tenantCode},            #{value.createdAt},            #{value.createdBy},            #{value.updatedAt},            #{value.updatedBy},            #{value.version},            #{value.dr})
        </foreach>
    </insert>
    <update id="batchUpdate">
        INSERT INTO hotword_goodslables_relation
        (        id,        hot_word_id,        goods_labels_id,        tenant_code,        created_at,        created_by,        updated_at,        updated_by,        version,        dr)
        VALUES
        <foreach collection="eou" index="index" item="value" separator=",">
            (            #{value.id},            #{value.hotWordId},            #{value.goodsLabelsId},            #{value.tenantCode},            #{value.createdAt},            #{value.createdBy},            #{value.updatedAt},            #{value.updatedBy},            #{value.version},            #{value.dr})
        </foreach>
        ON DUPLICATE KEY UPDATE
        id=values(id),            hot_word_id=values(hot_word_id),            goods_labels_id=values(goods_labels_id),            tenant_code=values(tenant_code),            created_at=values(created_at),            created_by=values(created_by),            updated_at=values(updated_at),            updated_by=values(updated_by),            version=values(version),            dr=values(dr)    </update>

    <!--根据id批量删除-->
    <update id="deleteByIds">
        UPDATE coc_hotword_goodslables_relation set dr=1 where dr=0 and id in
        <foreach collection="pks" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!--根据hotwordid查询主键id-->
    <select id="selectByHotWordId" parameterType="java.lang.String" resultType="java.lang.String">
        select id from coc_hotword_goodslables_relation where hot_word_id=#{hotWordId} and dr=0
    </select>

    <!--根据热词id删除关系表数据-->
    <update id="deleteByHotWordIds" parameterType="java.util.List">
        UPDATE coc_hotword_goodslables_relation set dr=1 where dr=0 and id in
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!--根据热词id查找商品标签id-->
    <select id="selectGoodsLabelIdsByHotWordId" parameterType="java.lang.String" resultType="java.lang.String">
        select goods_labels_id from coc_hotword_goodslables_relation
        where dr=0 and hot_word_id=#{hotWordId}

    </select>

</mapper>