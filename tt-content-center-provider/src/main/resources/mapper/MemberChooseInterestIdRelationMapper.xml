<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--客户映射 指定到dao接口 -->
<mapper namespace="com.deepexi.content.mapper.MemberChooseInterestIdRelationMapper">
    <resultMap type="com.deepexi.content.domain.dto.MemberChooseInterestIdRelationDto" id="MemberChooseInterestIdRelationDtoResult">
        <result property="id" column="id" />
        <result property="memberChooseValueId" column="member_choose_value_id" />
        <result property="memberChooseId" column="member_choose_id" />
        <result property="tenantCode" column="tenant_code" />
        <result property="createdAt" column="created_at" />
        <result property="createdBy" column="created_by" />
        <result property="updatedAt" column="updated_at" />
        <result property="updatedBy" column="updated_by" />
        <result property="version" column="version" />
        <result property="dr" column="dr" />
    </resultMap>
    <sql id="Base_Column_List">
      id,      member_choose_value_id,      member_choose_id,      tenant_code,      created_at,      created_by,      updated_at,      updated_by,      version,      dr    </sql>
    <select id="findList" resultType="com.deepexi.content.domain.eo.MemberChooseInterestIdRelation">
        SELECT <include refid="Base_Column_List"/> FROM member_choose_interest_id_relation WHERE dr=0
    </select>
    <insert id="batchInsert">
        INSERT INTO member_choose_interest_id_relation
        (        id,        member_choose_value_id,        member_choose_id,        tenant_code,        created_at,        created_by,        updated_at,        updated_by,        version,        dr)
        VALUES
        <foreach collection="eo" index="index" item="value" separator=",">
            (            #{value.id},            #{value.memberChooseValueId},            #{value.memberChooseId},            #{value.tenantCode},            #{value.createdAt},            #{value.createdBy},            #{value.updatedAt},            #{value.updatedBy},            #{value.version},            #{value.dr})
        </foreach>
    </insert>
    <update id="batchUpdate">
        INSERT INTO member_choose_interest_id_relation
        (        id,        member_choose_value_id,        member_choose_id,        tenant_code,        created_at,        created_by,        updated_at,        updated_by,        version,        dr)
        VALUES
        <foreach collection="eo" index="index" item="value" separator=",">
            (            #{value.id},            #{value.memberChooseValueId},            #{value.memberChooseId},            #{value.tenantCode},            #{value.createdAt},            #{value.createdBy},            #{value.updatedAt},            #{value.updatedBy},            #{value.version},            #{value.dr})
        </foreach>
        ON DUPLICATE KEY UPDATE
            id=values(id),            member_choose_value_id=values(member_choose_value_id),            member_choose_id=values(member_choose_id),            tenant_code=values(tenant_code),            created_at=values(created_at),            created_by=values(created_by),            updated_at=values(updated_at),            updated_by=values(updated_by),            version=values(version),            dr=values(dr)    </update>
    <update id="deleteByIds">
        UPDATE member_choose_interest_id_relation set dr=1 where id in
        <foreach collection="pks" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!--根据兴趣id查询会员所选兴趣值的id-->
    <select id="selectMemberChooseValueId"  resultType="java.lang.String">

        select member_choose_value_id
        from
        coc_member_choose_interest_id_relation
        where
        member_choose_id=#{interestId} and member_id=#{memberId} and dr=0

    </select>

</mapper>