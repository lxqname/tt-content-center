<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--客户映射 指定到dao接口 -->
<mapper namespace="com.deepexi.content.mapper.InterestMapper">
    <resultMap type="com.deepexi.content.domain.dto.InterestDto" id="InterestDtoResult">
        <result property="id" column="id" />
        <result property="interestName" column="interest_name" />
        <result property="interestType" column="interest_type" />
        <result property="interestValue" column="interest_value" />
        <result property="status" column="status" />
        <result property="level" column="level" />
        <result property="guideName" column="guide_name" />
        <result property="tenantCode" column="tenant_code" />
        <result property="createdAt" column="created_at" />
        <result property="createdBy" column="created_by" />
        <result property="updatedAt" column="updated_at" />
        <result property="updatedBy" column="updated_by" />
        <result property="version" column="version" />
        <result property="dr" column="dr" />
    </resultMap>
    <sql id="Base_Column_List">
      id,      interest_name,      interest_type,      interest_value,      status,      level,      guide_name,      tenant_code,      created_at,      created_by,      updated_at,      updated_by,      version,      dr    </sql>
    <select id="findList" resultType="com.deepexi.content.domain.eo.Interest">
        SELECT <include refid="Base_Column_List"/> FROM interest WHERE dr=0
    </select>
    <insert id="batchInsert">
        INSERT INTO interest
        (        id,        interest_name,        interest_type,        interest_value,        status,        level,        guide_name,        tenant_code,        created_at,        created_by,        updated_at,        updated_by,        version,        dr)
        VALUES
        <foreach collection="eo" index="index" item="value" separator=",">
            (            #{value.id},            #{value.interestName},            #{value.interestType},            #{value.interestValue},            #{value.status},            #{value.level},            #{value.guideName},            #{value.tenantCode},            #{value.createdAt},            #{value.createdBy},            #{value.updatedAt},            #{value.updatedBy},            #{value.version},            #{value.dr})
        </foreach>
    </insert>
    <update id="batchUpdate">
        INSERT INTO interest
        (        id,        interest_name,        interest_type,        interest_value,        status,        level,        guide_name,        tenant_code,        created_at,        created_by,        updated_at,        updated_by,        version,        dr)
        VALUES
        <foreach collection="eo" index="index" item="value" separator=",">
            (            #{value.id},            #{value.interestName},            #{value.interestType},            #{value.interestValue},            #{value.status},            #{value.level},            #{value.guideName},            #{value.tenantCode},            #{value.createdAt},            #{value.createdBy},            #{value.updatedAt},            #{value.updatedBy},            #{value.version},            #{value.dr})
        </foreach>
        ON DUPLICATE KEY UPDATE
            id=values(id),            interest_name=values(interest_name),            interest_type=values(interest_type),            interest_value=values(interest_value),            status=values(status),            level=values(level),            guide_name=values(guide_name),            tenant_code=values(tenant_code),            created_at=values(created_at),            created_by=values(created_by),            updated_at=values(updated_at),            updated_by=values(updated_by),            version=values(version),            dr=values(dr)    </update>
    <update id="deleteByIds">
        UPDATE interest set dr=1 where id in
        <foreach collection="pks" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!--查询数据库最大level-->
    <select id="selectMaxLevel" resultType="int">
        SELECT IFNULL(MAX(LEVEL),0) LEVEL FROM coc_interest
    </select>

    <!--分页查询兴趣引导项-->
    <select id="findPage" parameterType="java.lang.String" resultType="com.deepexi.content.domain.vo.InterestVo">
        select id,interest_name,guide_name,interest_type,interest_value,level
        from coc_interest
        where
        dr=0 and status=1 and tenant_code=#{tenantCode}
        order by level
    </select>

    <!--根据id回显引导语-->
    <select id="selectGuideName" parameterType="java.lang.String" resultType="com.deepexi.content.domain.vo.InterestVo">
        select id,guide_name
        from coc_interest
        where
        id=#{id} and dr=0
    </select>

    <!--根据兴趣项id查询level-->
    <select id="selectLevelById" parameterType="java.lang.String" resultType="int">
        select ifnull(level,0)
        from coc_interest
        where id=#{id} and dr=0

    </select>

    <!--根据level查id,level(小于level的第一个)-->
    <select id="selectIdByUpLevel" parameterType="int" resultType="com.deepexi.content.domain.vo.InterestVo">
        SELECT id,level FROM coc_interest
        WHERE
        level &lt; #{level}
        AND dr=0 ORDER BY level DESC LIMIT 1

    </select>

    <!--根据level查id,level(大于level的第一个)-->
    <select id="selectIdByDownLevel" parameterType="int" resultType="com.deepexi.content.domain.vo.InterestVo">
        SELECT id,level FROM coc_interest
        WHERE
        level &gt; #{level}
        AND dr=0 ORDER BY level LIMIT 1
    </select>

    <!--查询所有兴趣项到H5页面-->
    <select id="selectAllInterest" resultType="com.deepexi.content.domain.vo.InterestToH5Vo">
        select id,interest_name,guide_name from coc_interest where dr=0 and status=1 order by level
    </select>
</mapper>