<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--客户映射 指定到dao接口 -->
<mapper namespace="com.deepexi.content.mapper.ProjectPageMapper">
    <resultMap type="com.deepexi.content.domain.dto.ProjectPageDto" id="ProjectPageDtoResult">
        <result property="id" column="id" />
        <result property="name" column="name" />
        <result property="status" column="status" />
        <result property="imgUrl" column="img_url" />
        <result property="tenantCode" column="tenant_code" />
        <result property="createdAt" column="created_at" />
        <result property="createdBy" column="created_by" />
        <result property="updatedAt" column="updated_at" />
        <result property="updatedBy" column="updated_by" />
        <result property="version" column="version" />
        <result property="dr" column="dr" />
    </resultMap>
    <sql id="Base_Column_List">
      id,
      `name`,
      status,
      img_url,
      tenant_code,
      created_at,
      created_by,
      updated_at,
      updated_by,
      version,
      dr
    </sql>
    <select id="findList" resultType="com.deepexi.content.domain.eo.ProjectPage">
        SELECT <include refid="Base_Column_List"/>
        FROM coc_project_page
        WHERE dr=0
        AND tenant_code = #{tenantId}
        ORDER BY weight ASC
    </select>
    <insert id="batchInsert">
        INSERT INTO coc_project_page
        (        id,        name,        status,        img_url,        tenant_code,        created_at,        created_by,        updated_at,        updated_by,        version,        dr)
        VALUES
        <foreach collection="eo" index="index" item="value" separator=",">
            (            #{value.id},            #{value.name},            #{value.status},            #{value.imgUrl},            #{value.tenantCode},            #{value.createdAt},            #{value.createdBy},            #{value.updatedAt},            #{value.updatedBy},            #{value.version},            #{value.dr})
        </foreach>
    </insert>
    <update id="batchUpdate">
        INSERT INTO coc_project_page
        (        id,        name,        status,        img_url,        tenant_code,        created_at,        created_by,        updated_at,        updated_by,        version,        dr)
        VALUES
        <foreach collection="eo" index="index" item="value" separator=",">
            (            #{value.id},            #{value.name},            #{value.status},            #{value.imgUrl},            #{value.tenantCode},            #{value.createdAt},            #{value.createdBy},            #{value.updatedAt},            #{value.updatedBy},            #{value.version},            #{value.dr})
        </foreach>
        ON DUPLICATE KEY UPDATE
            id=values(id),            name=values(name),            status=values(status),            img_url=values(img_url),            tenant_code=values(tenant_code),            created_at=values(created_at),            created_by=values(created_by),            updated_at=values(updated_at),            updated_by=values(updated_by),            version=values(version),            dr=values(dr)    </update>
    <update id="deleteByIds">
        UPDATE coc_project_page
        SET dr=1
        WHERE id
        IN
        <foreach collection="pks" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    <select id="getByName" resultType="com.deepexi.content.domain.eo.ProjectPage">
        SELECT <include refid="Base_Column_List"/>
        FROM coc_project_page
        WHERE dr=0
        AND name=#{name}
        AND tenant_code = #{tenantId}
        limit 1
    </select>
    <select id="getLinearTree" resultType="com.deepexi.common.domain.vo.LinearTreeVo">
        SELECT <include refid="Base_Column_List"/>
        id,
        p_id AS 'parentId',
        `name` AS 'label'
        FROM coc_project_page
        WHERE
        tenant_code = #{tenantId} AND dr = 0
        <if test="dto.name != null and dto.name != ''">
            AND `name` = #{dto.name}
        </if>
        <if test="dto.pId != null and dto.pId != ''">
            AND p_id = #{dto.pId}
        </if>
    </select>
    <select id="getMaxWeight" resultType="java.lang.Integer">
        SELECT max(weight)
        FROM coc_project_page
        WHERE tenant_code = #{tenantId} limit 1
    </select>
    <update id="addWeight">
        Update coc_project_page set weight=weight+1
        WHERE dr=0
        AND weight <![CDATA[ >= ]]> #{weight}
        AND tenant_code = #{tenantId}
    </update>

</mapper>